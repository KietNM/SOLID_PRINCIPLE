USE [AdventureWorks2012]
GO

/****** Object:  StoredProcedure [Production].[GetProductionsPagedDatabyFetch]    Script Date: 12/12/2017 4:34:59 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- DROP PROCEDURE Production].[GetProductionsPagedDatabyCTE;
-- 2017/12/12 KietNM Create.
-- =============================================

CREATE PROCEDURE [Production].[GetProductionsPagedDatabyFetch]
(@productName   NVARCHAR(50),
 @productNumber NVARCHAR(25),
 @pageNum       INT,
 @pageSize      INT
)
AS
     BEGIN
         SELECT pr.ProductID,
                pr.Name AS ProductName,
                pr.ProductNumber AS ProductNumber,
                pc.Name AS ProductSubcategoryName,
                pu.UnitMeasureCode AS UnitMeasureCode,
                pu.Name AS UnitMeasureName,
                pm.Name AS ProductModelName
         FROM Production.Product pr WITH (NOLOCK)
              LEFT JOIN Production.ProductCategory pc WITH (NOLOCK) ON pr.ProductSubcategoryID = pc.ProductCategoryID
              LEFT JOIN Production.UnitMeasure pu WITH (NOLOCK) ON pr.SizeUnitMeasureCode = pu.UnitMeasureCode
              LEFT JOIN Production.ProductModel pm WITH (NOLOCK) ON pr.ProductModelID = pm.ProductModelID
         WHERE(@productName IS NULL
               OR pr.Name LIKE N'%'+@productName+'%')
              AND (@productNumber IS NULL
                   OR pr.ProductNumber LIKE N'%'+@productNumber+'%')
         ORDER BY pr.Name
         OFFSET(@pageNum - 1) * @pageSize ROWS FETCH NEXT @pageSize ROWS ONLY;
     END;
	--EXEC Production.GetProductionsPagedDatabyFetch  @productName ='',  @productNumber='AR-', @pageNum = 1, @pageSize = 3
	--EXEC Production.GetProductionsPagedDatabyFetch  @productName =NULL,  @productNumber=NULL, @pageNum = 1, @pageSize = 3
GO